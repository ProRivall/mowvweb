# Context: MOWV React + Vite + GSAP + Three.js + Lenis.
# Goal: Add cinematic responsive navbar + working left/right swipe for Gallery and StreetStories, and enforce proper snap transitions between sections (no “dead zones” between them).
# Style: Cinematic, fluid, minimal, dark luxury.

===============================================================================
2) CINEMATIC NAVBAR (with GSAP hamburger)
===============================================================================
Replace your current Navbar component with this structure:
----------------------------------------------------------------
<nav className="navbar">
  <div className="logo">MOWV</div>
  <div className={`nav-links ${menuOpen ? "open" : ""}`}>
    <a href="#home">Home</a>
    <a href="#about">About</a>
    <a href="#stories">Stories</a>
    <a href="#gallery">Gallery</a>
    <a href="#join">Join</a>
  </div>
  <button className={`menu-toggle ${menuOpen ? "active" : ""}`} onClick={toggleMenu} aria-label="Toggle menu">
    <span></span><span></span><span></span>
  </button>
</nav>
----------------------------------------------------------------

Add this JS logic in your navbar or main app file:
----------------------------------------------------------------
import gsap from "gsap";
const [menuOpen, setMenuOpen] = useState(false);
const toggleMenu = () => {
  setMenuOpen(!menuOpen);
  const tl = gsap.timeline({ defaults: { ease: "power3.inOut" } });
  if (!menuOpen) {
    tl.fromTo(".nav-links a", { y: 30, opacity: 0 }, { y: 0, opacity: 1, stagger: 0.08, duration: 0.6 });
  } else {
    tl.to(".nav-links a", { y: -20, opacity: 0, stagger: 0.05, duration: 0.3 });
  }
};
----------------------------------------------------------------

CSS:
----------------------------------------------------------------
.navbar {
  position: fixed;
  top: 0; left: 0;
  width: 100%;
  padding: 12px 20px;
  display: flex;
  justify-content: space-between;
  align-items: center;
  z-index: 2000;
  backdrop-filter: blur(12px);
  background: rgba(0, 0, 0, 0.4);
  color: #FF0420;
  font-weight: 700;
  letter-spacing: 1px;
}

.nav-links {
  display: flex;
  gap: 2rem;
  transition: transform 0.4s ease;
}
.nav-links a {
  color: #FF0420;
  text-decoration: none;
  font-weight: 600;
  transition: opacity 0.3s ease;
}

.menu-toggle {
  display: none;
  flex-direction: column;
  justify-content: space-between;
  width: 24px;
  height: 18px;
  background: none;
  border: none;
  cursor: pointer;
  z-index: 3000;
}
.menu-toggle span {
  display: block;
  height: 2px;
  width: 100%;
  background: #FF0420;
  border-radius: 2px;
  transition: all 0.3s ease;
}
.menu-toggle.active span:nth-child(1) {
  transform: rotate(45deg) translateY(7px);
}
.menu-toggle.active span:nth-child(2) {
  opacity: 0;
}
.menu-toggle.active span:nth-child(3) {
  transform: rotate(-45deg) translateY(-7px);
}

@media (max-width: 768px) {
  .nav-links {
    position: fixed;
    inset: 0;
    background: rgba(0, 0, 0, 0.96);
    flex-direction: column;
    justify-content: center;
    align-items: center;
    transform: translateY(-100%);
  }
  .nav-links.open {
    transform: translateY(0);
  }
  .menu-toggle {
    display: flex;
  }
}
----------------------------------------------------------------

===============================================================================
3) SWIPE SUPPORT FOR GALLERY & STREETSTORIES
===============================================================================
Replace scroll-only behavior with GSAP Draggable (or touch-based horizontal swipe).
Create this helper hook:
----------------------------------------------------------------
import { useEffect } from "react";
import { gsap } from "gsap";
import { Draggable } from "gsap/Draggable";

export function useSwipeCarousel(selector) {
  useEffect(() => {
    gsap.registerPlugin(Draggable);
    const container = document.querySelector(selector);
    if (!container) return;

    Draggable.create(container, {
      type: "x",
      bounds: { minX: -container.scrollWidth + container.offsetWidth, maxX: 0 },
      inertia: true,
      edgeResistance: 0.85,
    });
  }, [selector]);
}
----------------------------------------------------------------

Then call inside Gallery and StreetStories components:
----------------------------------------------------------------
useSwipeCarousel(".gallery-container");
useSwipeCarousel(".stories-container");
----------------------------------------------------------------

Ensure these wrappers exist:
----------------------------------------------------------------
<div className="gallery-container">
  {cards.map(...)}
</div>

<div className="stories-container">
  {stories.map(...)}
</div>
----------------------------------------------------------------

And add CSS:
----------------------------------------------------------------
.gallery-container, .stories-container {
  display: flex;
  gap: 24px;
  overflow: hidden;
  touch-action: pan-y;
  scroll-snap-type: x mandatory;
}
.gallery-container > *, .stories-container > * {
  flex-shrink: 0;
  scroll-snap-align: start;
}
----------------------------------------------------------------

===============================================================================
4) SECTION TRANSITIONS — NO DEAD ZONES
===============================================================================
Ensure every main section uses:
----------------------------------------------------------------
section {
  min-height: 100dvh;
  scroll-snap-align: start;
  scroll-snap-stop: always;
}
----------------------------------------------------------------
Add this CSS globally:
----------------------------------------------------------------
html, body {
  scroll-snap-type: y mandatory;
  overflow-x: hidden;
  background-color: #000;
}
----------------------------------------------------------------
This will ensure the user transitions cleanly between sections (no partial scroll stalls).

===============================================================================
5) HERO & MOTION BUTTON SAFE AREAS
===============================================================================
Add:
----------------------------------------------------------------
h1 { font-size: clamp(2.4rem, 8vw, 5rem); }
.button--motion {
  margin-bottom: max(24px, env(safe-area-inset-bottom));
}
----------------------------------------------------------------

===============================================================================
DELIVERABLE
===============================================================================
✅ Keep the progress bar logic untouched.  
✅ Add cinematic GSAP hamburger navbar.  
✅ Add horizontal swipe (Draggable) for Gallery & StreetStories.  
✅ Add vertical snap sections (no stuck in-between).  
✅ Add safe area handling for Motion button.  
✅ Maintain 3D and animation integrity.
